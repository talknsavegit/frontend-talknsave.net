jQuery(document).ready(function ($) {    $("#selectedTable")[0].options.selectedIndex = 1;    $('#buttonGo').click(function () {        getTable();    });    function ShowLoading() {        $('#outputDiv').prepend('<br /><img id="loading" src="' + $("input#eat_path").val() + 'assets/progress.gif" />');    }    function GetFilterData(offSet) {        var filterData =        {            action: 'GetRecords',            table2Edit: $('#selectedTable').val(),            eat_cols: $("input#eat_cols").val(),            keys: $("input#keys").val(),            values: $("input#values").val(),            offSet: offSet,            fuzzy: $("input#fuzzy").val()        }        return filterData;    }    // This creates the event handlers for the next/previous buttons & also    // the save & delete     function NextPrev() {        var offSet = $("input#offSet").val();        var eat_cols = $("input#eat_cols").val()        $('#buttonNext').click(function () {            ShowLoading();            offSet = parseInt(offSet) + parseInt(eat_cols);            var filterData = GetFilterData(offSet);            jQuery.post(ajaxurl, filterData, function (response) {                $("#outputDiv").html(response);            }).complete(function () {                NextPrev()            });        });        $('#buttonPrev').click(function () {            ShowLoading();            offSet = parseInt(offSet) - parseInt(eat_cols);            var filterData = GetFilterData(offSet);            jQuery.post(ajaxurl, filterData, function (response) {                $("#outputDiv").html(response);            }).complete(function () {                NextPrev()            });        });        $("[id^=save]").click(function () {            ShowLoading();            var dlg = jQuery("<div id='messageDiv' title='Update Record?' STYLE='padding: 10px'  />").html("Are you sure you want to update this record?");            // we need to pick up all the primary keys (id='PRIMARY:<column            // name>') for the update command so cycle through the table             // using the column number identified by the button id e.g.            // delete1 (extract the 1 and cast)             var keys = "";            var values = "";            // for the update vals i.e. non-primary             var keysU = "";            var valuesU = "";            // var column = 0;//parseInt(this.id.substring(4));            // loop through table rows             var aRow = $($('#tableCols tr')[parseInt(this.id.substring(4))]); // skip header            aRow.each(function (index) {                var aThis = $(this);                var columns = aThis.find('td');                columns.each(function (index2) {                    var key = $(this).attr('id');//eq().attr('id');                    if (key != undefined && key.substring(0, 7) == "PRIMARY") {                        var value = $(this).text();//find("td").text();                        // add this pair                        keys += (keys == "" ? "" : "~") + key.substring(8);                        values += (values == "" ? "" : "~") + value;                    }                    else if (key != undefined) {                        var valueU = $(this).find('textarea').val();//$(this).find("td").eq(column).find('input').val();                        if (valueU === undefined) {                        	if (this.id == 'priority') {                        		var tmp = $(this).find('select')[0];                         		valueU = tmp.options[tmp.selectedIndex].value;                        	} else if (this.id == 'hidden') {                         		if ($(this).find('input').is(':checked')) {                        			valueU = 1;                        		} else {                        			valueU = 0;                        		}                        	}                        }                        //;                        // add this pair for updating                        keysU += (keysU == "" ? "" : "~") + key;                        valuesU += (valuesU == "" ? "" : "~") + valueU;                    }                });            });            dlg.dialog({                'dialogClass': 'wp-dialog',                'modal': true,                'autoOpen': false,                'closeOnEscape': true,                'buttons': [                    {                        'text': 'Yes',                        'class': 'button-primary',                        'click': function () {                            var filterData =                            {                                action: 'UpdateRecord',                                table2Edit: $('#selectedTable').val(),                                keys: keys,                                values: values,                                keysU: keysU,                                valuesU: valuesU                            }                            $(this).dialog('close');                            jQuery.post(ajaxurl, filterData, function (response) {                                if ($("#outputDiv2").length != 0) {                                    $("#outputDiv2").html(response);                                } else {                                    $("#outputDiv").after("<div id='outputDiv2'></div>");                                    $("#outputDiv2").html(response);                                }                                $("#loading").fadeOut();                            });                        }                    },                    {                        'text': 'No',                        'class': 'button-primary',                        'click': function () {                            $(this).dialog('close');                        }                    }                ]            }).dialog('open');        });        $("[id^=delete]").click(function () {            ShowLoading();            var dlg = jQuery("<div id='messageDiv' title='DELETE?' STYLE='padding: 10px'  />").html("Are you sure you want to delete this record?");            var keys = "";            var values = "";            var aRow = $($('#tableCols tr')[parseInt(this.id.substring(6))]); // skip header            aRow.each(function (index) {                var aThis = $(this);                var columns = aThis.find('td:lt(1)'); //only first column                columns.each(function (index2) {                    var key = $(this).attr('id');//eq().attr('id');                    if (key != undefined && key.substring(0, 7) == "PRIMARY") {                        var value = $(this).text();//find("td").text();                        // add this pair                        keys += (keys == "" ? "" : "~") + key.substring(8);                        values += (values == "" ? "" : "~") + value;                    }                });            });            dlg.dialog({                'dialogClass': 'wp-dialog',                'modal': true,                'autoOpen': false,                'closeOnEscape': true,                'buttons': [                    {                        'text': 'Yes',                        'class': 'button-primary',                        'click': function () {                            var filterData =                            {                                action: 'DeleteRecord',                                table2Edit: $('#selectedTable').val(),                                keys: keys,                                values: values                            }                            $(this).dialog('close');                            jQuery.post(ajaxurl, filterData, function (response) {                                $("#outputDiv").html(response);                            });                        }                    },                    {                        'text': 'No',                        'class': 'button-primary',                        'click': function () {                            $(this).dialog('close');                        }                    }                ]            }).dialog('open');        });    }    function getTable() {        ShowLoading();        var table2Edit = $('#selectedTable').val();        if (table2Edit != "NONE") {            // Return the table fields             var data =            {                action: 'GetTable',                table2Edit: $('#selectedTable').val(),                eat_cols: $("input#eat_cols").val()            };            jQuery.post(ajaxurl, data, function (response) {                $("#outputDiv").html(response);            })                .complete(function () {                    // Make the key/value pairs available to search and add                    // button clicks                     var keys = "";                    var values = "";                    // Function to build key/value pairs                     function BuildKeyValuePairs() {                        // loop through table rows                         var rows = $('#tableCols tr:gt(0)'); // skip                        // header                         rows.each(function (index) {                            var key = $(this).find("td").eq(1).find('input').attr('id');                            var value = $(this).find("td").eq(1).find('input').val();                            if (value != "") {                                // add this pair                                 keys += (keys == "" ? "" : "~") + key;                                values += (values == "" ? "" : "~") + value;                            }                        });                    }                    // Find Button                     $('#buttonFind').click(function () {                        // first build key/value pairs                         BuildKeyValuePairs();                        ShowLoading();                        var filterData =                        {                            action: 'GetRecords',                            table2Edit: $('#selectedTable').val(),                            eat_cols: $("input#eat_cols").val(),                            keys: keys,                            values: values,                            offSet: 0,                            fuzzy: $("input#fuzzy").attr('checked')                        }                        jQuery.post(ajaxurl, filterData, function (response) {                            $("#outputDiv").html(response);                        })                            .complete(function () {                                // create handlers for next & previous                                // buttons                                 NextPrev()                            });                    });                    // Add Button                     $('#buttonAdd').click(function () {                        ShowLoading();                        // Get the key value pairs                         BuildKeyValuePairs();                        var filterData =                        {                            action: 'AddRecord',                            table2Edit: $('#selectedTable').val(),                            eat_cols: $("input#eat_cols").val(),                            keys: keys,                            values: values,                        }                        jQuery.post(ajaxurl, filterData, function (response) {                            $("#outputDiv").html(response);                        });                    });                    // Reset Button                     $('#buttonReset').click(function () {                        var rows = $('#tableCols tr:gt(0)'); // skip                        // header                         rows.each(function (index) {                            $(this).find("td").eq(1).find('input').val("");                        });                    });                });        }        else {            $("#outputDiv").html("");            ShowMessage("You must choose a table to edit.", "Select Table");        }    }    function ShowMessage(message, title) {        var dlg = jQuery("<div id='messageDiv' title='" + title + "' STYLE='padding: 10px'  />").html(message);        dlg.dialog({            'dialogClass': 'wp-dialog',            'modal': true,            'autoOpen': false,            'closeOnEscape': true,            'buttons': [                {                    'text': 'Close',                    'class': 'button-primary',                    'click': function () {                        $(this).dialog('close');                    }                }            ]        }).dialog('open');    }    getTable();});window.newRowOnClickListener = undefined;window.mst_interval_id = window.setInterval(function () {	if (document.getElementById('gloriousNewRow') != null && document.getElementById('gloriousNewRow') != undefined && typeof jQuery == "function") {		if (window.newRowOnClickListener == undefined) {			window.newRowOnClickListener = function() {				ajaxurl = ajaxurl;			    filterData = {			        "action": "AddRecord",			        "table2Edit": jQuery("#selectedTable").val(),			        "keys": jQuery("#tableCols > tbody > tr:nth-child(1) > td:nth-child(1)").text(),			        "values": "NULL"			    };			    if (typeof ajaxurl != "string") {			        ajaxurl = "/wp/wp-admin/admin-ajax.php";			    }			    jQuery.post(ajaxurl, filterData, function (response) {					if (jQuery("#outputDiv2").length != 0) {						jQuery("#outputDiv2").html(response);					} else {						jQuery("#outputDiv").after("<div id='outputDiv2'></div>");						jQuery("#outputDiv2").html(response);					}					jQuery("#loading").fadeOut();			    });			    alert("Please re-open the table");			};			document.getElementById('gloriousNewRow').addEventListener('click', window.newRowOnClickListener);		}		try {			if(document.getElementById('gloriousNewRow').onclick == null)				document.getElementById('gloriousNewRow').onclick = onClickFunction;		} catch (eventException) {			console.log(eventException);		}		jQuery("#refreshTable").hide();		jQuery("#gloriousNewRow").show();		window.clearInterval(window.mst_interval_id);	}}, 500);